name: Codecov
on: [push, pull_request]
jobs:
  run:
    name: test ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@master

      - uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install core deps
        run: |
          uv sync
      - run: 'uv run python -c "import pydantic.version; print(pydantic.version.version_info())"'
      - name: Generate coverage report (core)
        run: |
          uv run pytest --cov=. --cov-report=xml:./coverage/coverage-core.xml tests/

      - name: Install extra deps
        run: |
          uv sync --all-extras

      - name: Generate coverage report (extra)
        run: |
          uv run pytest --cov=. --cov-report=xml:./coverage/coverage-extra.xml tests/

      - name: Upload coverage to Codecov (core)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage
          files: coverage-core.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          flags: core
          name: codecov-aiopenapi3
          verbose: true

      - name: Upload coverage to Codecov (extra)
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage
          files: coverage-extra.xml
          env_vars: OS,PYTHON
          fail_ci_if_error: false
          flags: extras
          name: codecov-aiopenapi3-extras
          verbose: true

[project]
name = "aiopenapi3"
description = "client and validator for OpenAPI3 3.0, OpenAPI 3.1, Swagger 2.0"
authors = [
    {name = "Markus KÃ¶tter", email = "commonism@users.noreply.github.com"},
]
dependencies = [
    "PyYaml",
    "pydantic>=2.10.5",
    "email-validator",
    "yarl",
    "httpx",
    "more-itertools",
    'typing_extensions; python_version<"3.10"',
    "jmespath",
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "BSD-3-Clause"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Topic :: Internet",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dynamic = ['version']

[project.urls]
Documentation = "https://aiopenapi3.readthedocs.io/"
Repository = "https://github.com/commonism/aiopenapi3"

[project.optional-dependencies]
auth = [
    "httpx-auth>=0.21.0",
]
socks = [
    "httpx-socks",
]
types =[
    "pydantic-extra-types>=2.10.1",
]
[project.scripts]
aiopenapi3 = "aiopenapi3.cli:main"

[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = [
    "aiopenapi3",
    "aiopenapi3.v20",
    "aiopenapi3.v30",
    "aiopenapi3.v31",
    "aiopenapi3.extra"
]

# https://github.com/astral-sh/uv/issues/9513#issuecomment-2519527822
license-files = []

[tool.setuptools.dynamic]
version = {attr = "aiopenapi3.version.__version__"}

[tool.black]
line-length = 120

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore:_:UserWarning",
    "ignore:unclosed <socket.socket fd=\\d+, family=AddressFamily.AF_UNIX, type=SocketKind.SOCK_DGRAM, proto=0, raddr=/run/systemd/journal/dev-log>:ResourceWarning",
    "ignore:unclosed file <_io.FileIO name='/tmp/aiopenapi3-debug.log' mode='ab' closefd=True>:ResourceWarning",
    "ignore:unclosed file <_io.TextIOWrapper name='/tmp/aiopenapi3-debug.log' mode='a' encoding='UTF-8'>:ResourceWarning",
    "ignore:unclosed <ssl.SSLSocket:ResourceWarning",
    "ignore:unclosed <socket.socket fd=:ResourceWarning",
    "ignore:Ignoring Schema with additionalProperties and named properties:UserWarning",
    "ignore:'flask.Markup' is deprecated and will be removed in Flask 2.4. Import 'markupsafe.Markup' instead.:DeprecationWarning",
    "ignore:unclosed resource <TCPTransport:ResourceWarning"
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "session"

log_cli = "yes"
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

addopts = "--ignore-glob 'tests/my_*.py'"

[tool.uv]
dev-dependencies = [
    "pytest",
    "pytest-asyncio>=0.24.0",
    "pytest-httpx",
    "pytest-cov",
    "pytest-mock",
    "fastapi",
    "fastapi-versioning",
    "uvloop",
    "flask",
    "flask_wtf",
    "wtforms",
    "asgiref",
    "trustme",
    "nonecorn",
    "bootstrap-flask",
    "ijson",
    "python-multipart>=0.0.6",
    "pydantic-extra-types>=2.10.1"
]

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple/"
publish-url = "https://pypi.org/legacy/"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"

[tool.mypy]
allow_redefinition = true

[tool.coverage.report]
exclude_also = [
    "if (typing\\.)?TYPE_CHECKING:"
]

[tool.coverage.run]
omit = [
    "aiopenapi3/_types.py",
    "aiopenapi3/__main__.py",
]
